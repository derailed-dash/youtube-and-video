# Cloud Build configuration for running Terraform

# The service account Cloud Build should use.
serviceAccount: 'projects/$PROJECT_ID/serviceAccounts/${_CICD_RUNNER_SA_EMAIL}'

steps:
  # === Initialize Terraform ===
  # Assumes your Terraform files are in the 'deploy/' directory relative to your repo root.
  # Assumes you are using a GCS backend for Terraform state, configured in your TF files.
  # You might need to pass backend configuration dynamically if it changes per environment/project.
  - name: 'hashicorp/terraform:1.7.5'
    id: Terraform Init
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        cd deploy/tf

        # Initialize Terraform - reads backend config from GCS
        terraform init -backend-config="bucket=$_TF_STATE_BUCKET"

  # === Generate Terraform Plan ===
  # Generate a plan to see changes before applying.
  # The plan file can be saved as an artifact for review or manual approval steps if needed.
  - name: 'hashicorp/terraform:1.7.5'
    id: Terraform Plan
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        cd deploy/tf
        terraform plan \
          -var 'project_id=$PROJECT_ID' \
          -var 'region=$_DEPLOY_REGION' \
          -var 'cb_region=$_CB_REGION' \
          -var 'my_org=$_ORG'
          -var 'service_name=$_SERVICE_NAME' \
          -var 'repo_name=$_REPO_NAME' \
          -var 'repo_owner=$_REPO_OWNER' \
          -var 'artifact_repo_name=$_ARTIFACT_REPO_NAME' \
          -var 'github_app_installation_id=$_GITHUB_APP_INSTALLATION_ID' \
          -var 'github_pat_secret_id=$_GITHUB_PAT_SECRET_ID' \
          -var 'trigger_branch_name=$_BRANCH'
          -var 'log_level=$_LOG_LEVEL' \
          -out=tfplan

    # Wait for init to complete
    waitFor: ['Terraform Init']

  # === Apply Terraform ===
  # Apply the Terraform configuration automatically.
  - name: 'hashicorp/terraform:1.7.5'
    id: Terraform Apply
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        cd deploy/tf
        terraform apply -auto-approve tfplan

    # Wait for plan to complete
    waitFor: ['Terraform Plan']

# Default substitution values. These can be overridden by trigger settings or manual runs.
substitutions:
  _TF_STATE_BUCKET: $PROJECT_ID-tfstate
  _DEPLOY_REGION: europe-west4
  _CB_REGION: europe-west4
  _ORG: some-org
  _REPO_NAME: youtube-and-video
  _REPO_OWNER: some-dude
  _SERVICE_NAME: video-intelligence
  _ARTIFACT_REPO_NAME: video-intelligence
  _GITHUB_APP_INSTALLATION_ID: 12345678
  _GITHUB_PAT_SECRET_ID: github-pat
  _BRANCH: dev
  _LOG_LEVEL: DEBUG

# Build options
options:
  logging: CLOUD_LOGGING_ONLY

tags:
  - terraform
  - infrastructure
